#version 410 core

//
// simple.vert
//
//   ?P?????A?e?t?????s?????I?u?W?F?N?g???`???????V?F?[?_
//

// ????
layout (std140) uniform Material
{
  vec4 kamb;                                          // ?????????????W??
  vec4 kdiff;                                         // ?g?U?????W??
  vec4 kspec;                                         // ?????????W??
  float kshi;                                         // ?P???W??
};

// ????
layout (std140) uniform Light
{
  vec4 lamb;                                          // ??????????
  vec4 ldiff;                                         // ?g?U??????????
  vec4 lspec;                                         // ??????????????
  vec4 lpos;                                          // ???u
};

// ?????s??
uniform mat4 mp;                                      // ???e?????s??
uniform mat4 mv;                                      // ???f???r???[?????s??
uniform mat4 mn;                                      // ?@???????s??

// ???_????
layout (location = 0) in vec4 pv;                     // ???[?J?????W?n?????_???u
layout (location = 1) in vec4 nv;                     // ???_???@???x?N?g??

// ???X?^???C?U?????????_????
out vec4 idiff;                                       // ?g?U?????????x
out vec4 ispec;                                       // ?????????????x

void main(void)
{
  // ???W?v?Z
  vec4 p = mv * pv;                                   // ???_???W?n?????_?????u
  vec3 v = normalize(p.xyz);                          // ???_???W?n???????x?N?g??
  vec3 l = normalize((lpos * p.w - p * lpos.w).xyz);  // ???_???W?n???????x?N?g??
  vec3 h = normalize(l - v);                          // ?????x?N?g??
  vec3 n = normalize((mn * nv).xyz);                  // ?@???x?N?g??

  // ?A?e?v?Z
  idiff = max(dot(n, l), 0.0) * kdiff * ldiff + kamb * lamb;
  ispec = pow(max(dot(n, h), 0.0), kshi) * kspec * lspec;

  // ?N???b?s???O???W?n?????_???u
  gl_Position = mp * p;
}
